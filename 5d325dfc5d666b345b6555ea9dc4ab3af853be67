{
  "comments": [
    {
      "key": {
        "uuid": "9a3d3df0_0641c9a8",
        "filename": "python_moonutilities/python_moonutilities/context.py",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 1384
      },
      "writtenOn": "2018-01-15T14:55:06Z",
      "side": 0,
      "message": "Why do you delete this one ?",
      "range": {
        "startLine": 299,
        "startChar": 4,
        "endLine": 301,
        "endChar": 25
      },
      "revId": "5d325dfc5d666b345b6555ea9dc4ab3af853be67",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_c9241262",
        "filename": "python_moonutilities/python_moonutilities/context.py",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 7131
      },
      "writtenOn": "2018-01-16T13:28:20Z",
      "side": 0,
      "message": "i think that it is not safe to be able update index",
      "parentUuid": "9a3d3df0_0641c9a8",
      "range": {
        "startLine": 299,
        "startChar": 4,
        "endLine": 301,
        "endChar": 25
      },
      "revId": "5d325dfc5d666b345b6555ea9dc4ab3af853be67",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_fc6ef22d",
        "filename": "python_moonutilities/python_moonutilities/context.py",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 1384
      },
      "writtenOn": "2018-01-16T13:43:09Z",
      "side": 0,
      "message": "This index is used to point to the current security function.\nAt this time, we don\u0027t need it but when we add the possibility to use more than one security function, this index will be increase after the current security function has been rendered.",
      "parentUuid": "9a3d3df0_c9241262",
      "range": {
        "startLine": 299,
        "startChar": 4,
        "endLine": 301,
        "endChar": 25
      },
      "revId": "5d325dfc5d666b345b6555ea9dc4ab3af853be67",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_5c671e4d",
        "filename": "python_moonutilities/python_moonutilities/context.py",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 7131
      },
      "writtenOn": "2018-01-16T13:57:21Z",
      "side": 0,
      "message": "if you want to add a new one, you could use increment_index() i think it was more logic to start from it as it make some handling and initialization to objects\n\nbut if i made an increment for index and try to access some object depending on index without updating them i think it will cause an out of boundary issue",
      "parentUuid": "9a3d3df0_fc6ef22d",
      "range": {
        "startLine": 299,
        "startChar": 4,
        "endLine": 301,
        "endChar": 25
      },
      "revId": "5d325dfc5d666b345b6555ea9dc4ab3af853be67",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_d03dcf2c",
        "filename": "python_moonutilities/python_moonutilities/context.py",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 1384
      },
      "writtenOn": "2018-01-18T14:09:26Z",
      "side": 0,
      "message": "I understand that using a setter function to only increment an index is not the best way but I will need such a function when we will have more than one security function.\nThis is the same problem with the deleter function below. I can have a negative index which leads to an exception.",
      "parentUuid": "9a3d3df0_5c671e4d",
      "range": {
        "startLine": 299,
        "startChar": 4,
        "endLine": 301,
        "endChar": 25
      },
      "revId": "5d325dfc5d666b345b6555ea9dc4ab3af853be67",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_db532b15",
        "filename": "python_moonutilities/python_moonutilities/context.py",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 7131
      },
      "writtenOn": "2018-01-22T11:58:23Z",
      "side": 0,
      "message": "1- okay but u didn\u0027t mention why you couldn\u0027t use increment_index() to do that\n2- i could understand that if u increment index ( line 92,95,98) would access the second security pipeline\nbut what is the relation between index and meta rule (as in line 66,72,76\n\nif i understood well that headers is list of meta rule id ( which is not 1 or 2 rule it could be more) so why we access it by the index ( which related to security pipeline size ,1 or 2 .. ) ?",
      "parentUuid": "9a3d3df0_d03dcf2c",
      "range": {
        "startLine": 299,
        "startChar": 4,
        "endLine": 301,
        "endChar": 25
      },
      "revId": "5d325dfc5d666b345b6555ea9dc4ab3af853be67",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_dba7abbb",
        "filename": "python_moonutilities/python_moonutilities/context.py",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 1384
      },
      "writtenOn": "2018-01-22T15:10:14Z",
      "side": 0,
      "message": "1 What I am saying is that I need to increment my index regardless of the function we use (setter or increment_index()). When I develop that I through it was more aesthetic than a traditional increment function ;) .\n\n2 A security pipeline is composed of several security functions (today only 1: authz). \nThe index is a pointer to the headers list which is (as you pointed out) a list of meta rule ID. Each meta rule ID identifies one of the security function. When I will go through each security function, I will update this index to know where I am.\nDon\u0027t forget that this context will flow through each security function and will be updated by them accordingly to the result of each security function.\nAt this time, I don\u0027t know who will update the index:\n- the interface or\n- the previous component or\n- the current component",
      "parentUuid": "9a3d3df0_db532b15",
      "range": {
        "startLine": 299,
        "startChar": 4,
        "endLine": 301,
        "endChar": 25
      },
      "revId": "5d325dfc5d666b345b6555ea9dc4ab3af853be67",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_f63446fd",
        "filename": "python_moonutilities/python_moonutilities/context.py",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 7131
      },
      "writtenOn": "2018-01-23T08:42:35Z",
      "side": 0,
      "message": "is that mean that the list of meta rule ID will be the same size as security function (security pipeline) , which is for now one ?\n\nif not, so i expect that the index will be incremented at some time to access the rest of meta rule ID, in this case the index will be greater than size of security pipeline !\nHow to use same index for both?",
      "parentUuid": "9a3d3df0_dba7abbb",
      "range": {
        "startLine": 299,
        "startChar": 4,
        "endLine": 301,
        "endChar": 25
      },
      "revId": "5d325dfc5d666b345b6555ea9dc4ab3af853be67",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_7075d9c9",
        "filename": "python_moonutilities/python_moonutilities/context.py",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 1384
      },
      "writtenOn": "2018-01-24T08:59:27Z",
      "side": 0,
      "message": "Yes the list of meta rule ID _must_ be the same size as the security pipeline. If not, we must return a 500 error code.",
      "parentUuid": "9a3d3df0_f63446fd",
      "range": {
        "startLine": 299,
        "startChar": 4,
        "endLine": 301,
        "endChar": 25
      },
      "revId": "5d325dfc5d666b345b6555ea9dc4ab3af853be67",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}