{
  "comments": [
    {
      "key": {
        "uuid": "9a3d3df0_5de56536",
        "filename": "moon_wrapper/moon_wrapper/api/oslowrapper.py",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 1384
      },
      "writtenOn": "2018-01-11T10:17:08Z",
      "side": 1,
      "message": "In fact, it is not really useful here because the returned value of this function is analyzed in line 40. And I need to send a correct response to the OpenStack connector in line 43 and not an exception. If we send an exception here (line 119), we need to catch it before sending a \"good\" response to the OpenStack connector.",
      "range": {
        "startLine": 113,
        "startChar": 9,
        "endLine": 113,
        "endChar": 22
      },
      "revId": "3b8122bb29fefe70c757a07e208081e85f06b4d0",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_bd5bd1f4",
        "filename": "moon_wrapper/moon_wrapper/api/oslowrapper.py",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 7131
      },
      "writtenOn": "2018-01-11T10:37:05Z",
      "side": 1,
      "message": "if you have a look at line 87, you will see the same idea\n and you throw an exception and you have http_server file ( like moon_manager) which catch the exception and send a response with error code\n\nso what i mean here that the response will be returned with 200 and False, while actually it should n\u0027t be 200 , got my point ?",
      "parentUuid": "9a3d3df0_5de56536",
      "range": {
        "startLine": 113,
        "startChar": 9,
        "endLine": 113,
        "endChar": 22
      },
      "revId": "3b8122bb29fefe70c757a07e208081e85f06b4d0",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_030b802a",
        "filename": "moon_wrapper/moon_wrapper/api/oslowrapper.py",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 1384
      },
      "writtenOn": "2018-01-12T09:18:13Z",
      "side": 1,
      "message": "I understand your point, you want to throw an exception when the error is not 200 but we must send a correct response to the OpenStack connector in line 43 so you can throw an exception here but catch the exception before line 40 in order to send the correct response in lines 42 and 43. The OpenStack connector needs it.\nFor the line 87, I did not catch the exception in line 40 but it is a mistake.",
      "parentUuid": "9a3d3df0_bd5bd1f4",
      "range": {
        "startLine": 113,
        "startChar": 9,
        "endLine": 113,
        "endChar": 22
      },
      "revId": "3b8122bb29fefe70c757a07e208081e85f06b4d0",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_8c285d87",
        "filename": "moon_wrapper/moon_wrapper/api/oslowrapper.py",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 7131
      },
      "writtenOn": "2018-01-12T22:39:25Z",
      "side": 1,
      "message": "i guess that you already catch it in the HTTP_SERVER file and sending a correct response with failure status\n\nand i think it\u0027s correct to send a failure response to the openstack if the request didn\u0027t do it\u0027s job successufully",
      "parentUuid": "9a3d3df0_030b802a",
      "range": {
        "startLine": 113,
        "startChar": 9,
        "endLine": 113,
        "endChar": 22
      },
      "revId": "3b8122bb29fefe70c757a07e208081e85f06b4d0",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_46747135",
        "filename": "moon_wrapper/moon_wrapper/api/oslowrapper.py",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 1384
      },
      "writtenOn": "2018-01-15T13:40:43Z",
      "side": 1,
      "message": "The function __hook_errors in http_server.py have to deals with those errors but I had to work on it because OpenStack only waits for 2 responses : \n- \"True\" (the string \"True\")\n- \"False\" (the string \"False\")\nOther response are treated as a False response.",
      "parentUuid": "9a3d3df0_8c285d87",
      "range": {
        "startLine": 113,
        "startChar": 9,
        "endLine": 113,
        "endChar": 22
      },
      "revId": "3b8122bb29fefe70c757a07e208081e85f06b4d0",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}