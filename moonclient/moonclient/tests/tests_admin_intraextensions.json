{
  "command_options": "-f value",
  "tests_group": {
    "main": [
      {
        "name": "list tenant",
        "command": "tenant list",
        "result": "(?!alt_demo)",
        "description": "List all tenants (must be empty)"
      },
      {
        "name": "add tenant alt_demo",
        "command": "tenant add alt_demo",
        "result": "^$",
        "description": "Add a new tenant",
        "command_options": ""
      },
      {
        "name": "check tenant alt_demo",
        "command": "tenant list",
        "result": "(?P<uuid>\\w+)\\s+alt_demo",
        "description": "Check that tenant alt_demo has been correctly added"
      },
      {
        "name": "create_intraextension_admin",
        "command": "intraextension add --policy_model policy_rbac_admin admin_test",
        "result": "IntraExtension created: (?P<uuid_admin>\\w+)",
        "description": "Create an admin intra extension",
        "command_options": ""
      },
      {
        "name": "list_intraextension_admin",
        "command": "intraextension list",
        "result": "$uuid_admin",
        "description": "Check the existence of that admin intra extension"
      },
      {
        "name": "create_intraextension_authz",
        "command": "intraextension add --policy_model policy_authz authz_test",
        "result": "IntraExtension created: (?P<uuid_authz>\\w+)",
        "description": "Create an authz intra extension",
        "command_options": ""
      },
      {
        "name": "list_intraextension_authz",
        "command": "intraextension list",
        "result": "$uuid_authz",
        "description": "Check the existence of that authz intra extension"
      },
      {
        "name": "set_tenant_authz",
        "command": "tenant set --authz $uuid_authz $uuid",
        "result": "",
        "description": "Connect the authz intra extension to the tenant alt_demo",
        "command_options": ""
      },
      {
        "name": "check authz ie for tenant alt_demo",
        "command": "tenant list",
        "result": "alt_demo $uuid_authz",
        "description": "Check that authz ie has been correctly added for tenant alt_demo ",
        "command_options": "-c name -c intra_authz_extension_id -f value"
      },
      {
        "name": "set_tenant_admin",
        "command": "tenant set --admin $uuid_admin $uuid",
        "result": "",
        "description": "Connect the admin intra extension to the tenant alt_demo",
        "command_options": ""
      },
      {
        "name": "check admin ie for tenant alt_demo",
        "command": "tenant list",
        "result": "alt_demo $uuid_admin",
        "description": "Check that admin ie has been correctly added for tenant alt_demo ",
        "command_options": "-c name -c intra_admin_extension_id -f value"
      },

      {
        "name": "select admin ie",
        "command": "intraextension select $uuid_admin",
        "result": "Select $uuid_admin IntraExtension.",
        "description": "Select the admin intra extension to work with",
        "command_options": ""
      },
      {
        "name": "check_admin_user",
        "command": "subject list",
        "result": "admin",
        "description": "Check that admin user was added"
      },
      {
        "name": "check_submetarule",
        "command": "submetarule show",
        "result": "rbac",
        "description": "Check that submetarule was added"
      },


      {
        "name": "delete_admin_intra_extension",
        "command": "intraextension delete $uuid_admin",
        "result": "",
        "description": "Delete the admin intra extension",
        "command_options": ""
      },
      {
        "name": "delete_authz_intra_extension",
        "command": "intraextension delete $uuid_authz",
        "result": "",
        "description": "Delete the authz intra extension",
        "command_options": ""
      },
      {
        "name": "delete_tenant",
        "command": "tenant delete $uuid",
        "result": "",
        "description": "Delete the tenant alt_demo",
        "command_options": ""
      }
    ]
  }
}